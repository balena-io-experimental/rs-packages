/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export function sum(a: number, b: number): number
export class JsSink {
  constructor()
  cork(): void
  destroy(error?: unknown | undefined | null): this
  closed(): boolean
  destroyed(): boolean
  end(chunk?: unknown | undefined | null, encoding?: string | undefined | null, callback?: (...args: any[]) => any | undefined | null): this
  setDefaultEncoding(encoding: string): this
  uncork(): void
  writable(): boolean
  writableEnded(): boolean
  writableCorked(): number
  errored(): Error | null
  writableFinished(): boolean
  writableHighWaterMark(): number
  writableLength(): number
  writableNeedDrain(): boolean
  writableObjectMode(): boolean
  write(chunk: unknown, encoding?: string | undefined | null, callback?: (...args: any[]) => any | undefined | null): boolean
  emit(eventName: string, a1?: unknown | undefined | null, a2?: unknown | undefined | null, a3?: unknown | undefined | null, a4?: unknown | undefined | null, a5?: unknown | undefined | null): boolean
  eventNames(): Array<string>
  getMaxListeners(): number
  listeners(eventName: string): number
  off(eventName: string, callback: (...args: any[]) => any): this
  on(eventName: unknown, callback: (...args: any[]) => any): this
  once(eventName: unknown, listener: (...args: any[]) => any): this
  prependListener(eventName: unknown, listener: (...args: any[]) => any): this
  prependOnceListener(eventName: unknown, listener: (...args: any[]) => any): this
  removeAllListeners(eventName?: string | undefined | null): this
  setMaxListeners(n: number): this
  rawListeners(eventName: string): Array<(...args: any[]) => any>
}
export class JsEventData { }
export class JsToRustStreamString {
  constructor()
  getString(name: string): string
  static fibonacci(n: number): number
}
